var search_data = {"index":{"searchIndex":["parking","airport","data","error","motor","parkingspot","trainstation","vehiculo","<=>()","<=>()","<=>()","calc_price()","calc_volumen()","each()","free_spots_for_disabled()","is_good_for_disabled?()","new()","new()","new()","new()","new()","new()","occupiedspots()","park()","parking_time()","sost_index()","status()","to_s()","to_s()","to_s()","to_s()","to_s()","total_vehicles()","code_of_conduct","gemfile","gemfile.lock","guardfile","license","readme","rakefile","setup"],"longSearchIndex":["parking","parking::airport","parking::data","parking::error","parking::motor","parking::parkingspot","parking::trainstation","parking::vehiculo","parking::data#<=>()","parking::motor#<=>()","parking::vehiculo#<=>()","parking::data#calc_price()","parking::vehiculo#calc_volumen()","parking::data#each()","parking::free_spots_for_disabled()","parking::is_good_for_disabled?()","parking::airport::new()","parking::data::new()","parking::motor::new()","parking::parkingspot::new()","parking::trainstation::new()","parking::vehiculo::new()","parking::data#occupiedspots()","parking::data#park()","parking::data#parking_time()","parking::data#sost_index()","parking::status()","parking::airport#to_s()","parking::data#to_s()","parking::motor#to_s()","parking::trainstation#to_s()","parking::vehiculo#to_s()","parking::total_vehicles()","","","","","","","",""],"info":[["Parking","","Parking.html","","<p>Definiendo modulo parking e incluyendo ficheros del modulo\n<p>Incluyendo la clase Vehiculo::Motor en el modulo …\n"],["Parking::Airport","","Parking/Airport.html","","<p>clase Airport heredada de Data\n"],["Parking::Data","","Parking/Data.html","","<p>Definiendo clase Data que contiene a los datos de un aparcamiento\n"],["Parking::Error","","Parking/Error.html","","<p>Class\n"],["Parking::Motor","","Parking/Motor.html","","<p>Clase Vehiculo a Motor heredada de Vehiculo\n"],["Parking::ParkingSpot","","Parking/ParkingSpot.html","","<p>Definiendo la clas Parking Spot\n"],["Parking::TrainStation","","Parking/TrainStation.html","","<p>clase Estación de Tren heredada de Data, tendŕa un numero de plazas de larga permanencia\n"],["Parking::Vehiculo","","Parking/Vehiculo.html","","<p>Definiendo la clase vehículo\n"],["<=>","Parking::Data","Parking/Data.html#method-i-3C-3D-3E","(other)","<p>sobrecarga comparador\n"],["<=>","Parking::Motor","Parking/Motor.html#method-i-3C-3D-3E","(other)","<p>Operador de comparación sobrecargado\n"],["<=>","Parking::Vehiculo","Parking/Vehiculo.html#method-i-3C-3D-3E","(other)","<p>sobrecarga de &lt;=&gt; desde modulo comparable\n"],["calc_price","Parking::Data","Parking/Data.html#method-i-calc_price","()","<p>Calcula el precio de la estancia de un vehículo\n"],["calc_volumen","Parking::Vehiculo","Parking/Vehiculo.html#method-i-calc_volumen","()","<p>metodo que calcula volumen de un vehiculo a través de los tres parametros de dimensión (x,y,z)\n"],["each","Parking::Data","Parking/Data.html#method-i-each","()","<p>Calcula el precio de la estancia de un vehículo minusválido\n"],["free_spots_for_disabled","Parking","Parking.html#method-c-free_spots_for_disabled","(data)","<p>Metodo que determina si numero de plazas minusvalidos libre de un aparcamiento\n"],["is_good_for_disabled?","Parking","Parking.html#method-c-is_good_for_disabled-3F","(data)","<p>Metodo que averigua si parking cumple con numero de plazas minusvalido minimas\n"],["new","Parking::Airport","Parking/Airport.html#method-c-new","(id, name, desc, type, n_spots, accessibility, security, spots, min_spots, n_minspots, ppm, distance_center, vehicles, h_in, h_out, n_floors)","<p>Constructor de los Airpot\n"],["new","Parking::Data","Parking/Data.html#method-c-new","(id, name, desc, type, n_spots, accessibility, security, spots, min_spots, n_minspots, ppm, distance_center, vehicles, h_in, h_out)","<p>Constructor de los datos de un aparcamientos\n"],["new","Parking::Motor","Parking/Motor.html#method-c-new","(n_wheels, n_seats, cc, max_speed)","<p>Constructor de Motor, con parametros = Numero de Ruedas, Numero de asientos, Potencia en cm³ y velocidad …\n"],["new","Parking::ParkingSpot","Parking/ParkingSpot.html#method-c-new","(height, length, width)","<p>Constructor de un plaza de aparcamiento: 3 atributos (Altura, Largo, Ancho)\n"],["new","Parking::TrainStation","Parking/TrainStation.html#method-c-new","(id, name, desc, type, n_spots, accessibility, security, spots, min_spots, n_minspots, ppm, distance_center, vehicles, h_in, h_out, n_floors_long_stay)","<p>Constructor de las Estaciones de Tren\n"],["new","Parking::Vehiculo","Parking/Vehiculo.html#method-c-new","(id, height, width, length, weight)","<p>Constructor con id, altura, ancho, largo en m y peso en toneladas\n"],["occupiedSpots","Parking::Data","Parking/Data.html#method-i-occupiedSpots","()","<p>Calcula occupied spots\n"],["park","Parking::Data","Parking/Data.html#method-i-park","(vehicle)","<p>Aparcando coche, decrementando el número de plazas libres\n"],["parking_time","Parking::Data","Parking/Data.html#method-i-parking_time","()","<p>Calcula el tiempo de estancia de un vehículo\n"],["sost_index","Parking::Data","Parking/Data.html#method-i-sost_index","()","<p>P10\n"],["status","Parking","Parking.html#method-c-status","(data)","<p>Método que devuelve si parking está libre o no\n"],["to_s","Parking::Airport","Parking/Airport.html#method-i-to_s","()","<p>sobrecarga método to_s\n"],["to_s","Parking::Data","Parking/Data.html#method-i-to_s","()","<p>Sobrecargando método de formateo de cadena de un vehículo a motor\n"],["to_s","Parking::Motor","Parking/Motor.html#method-i-to_s","()","<p>Sobrecargando método de formateo de cadena de un vehículo a motor\n"],["to_s","Parking::TrainStation","Parking/TrainStation.html#method-i-to_s","()","<p>sobrecarga método to_s\n"],["to_s","Parking::Vehiculo","Parking/Vehiculo.html#method-i-to_s","()","<p>sobrecargando método to_s para un correcto formateo de la cadena\n"],["total_vehicles","Parking","Parking.html#method-c-total_vehicles","(data)","<p>Método que calcula numero total de vehiculos estacionados\n"],["CODE_OF_CONDUCT","","CODE_OF_CONDUCT_md.html","","<p>Contributor Covenant Code of Conduct\n<p>Our Pledge\n<p>In the interest of fostering an open and welcoming environment, …\n"],["Gemfile","","Gemfile.html","","<p>source “rubygems.org”\n<p># Specify your gem&#39;s dependencies in Parking.gemspec gemspec\n<p>gem “rake”, …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  Parking (0.3.0)</pre>\n<p>GEM\n"],["Guardfile","","Guardfile.html","","<p># A sample Guardfile # More info at github.com/guard/guard#readme\n<p>## Uncomment and set this to only include …\n"],["LICENSE","","LICENSE_txt.html","","<p>The MIT License (MIT)\n<p>Copyright © 2022 FrancescoMarelli\n<p>Permission is hereby granted, free of charge, …\n"],["README","","README_md.html","","<p>Autor\n<p>Autor: Francesco Marelli\nPractica 9: Gema Parking, Herencia de clases y polimorfimos\n<p>Parking\n"],["Rakefile","","Rakefile.html","","<p>require “bundler/gem_tasks” require “rspec/core/rake_task”\n<p>RSpec::Core::RakeTask.new …\n"],["setup","","bin/setup.html","","<p>#!/usr/bin/env bash set -euo pipefail IFS=$&#39;nt&#39; set -vx\n<p>bundle install\n<p># Do any other automated …\n"]]}}